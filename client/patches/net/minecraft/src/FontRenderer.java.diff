--- FontRenderer.java
+++ FontRenderer.java
@@ -12,5 +12,5 @@
     private int fontDisplayLists;
     private IntBuffer buffer;
-    
+
     public FontRenderer(final GameSettings gameSettings, final String resourceName, final RenderEngine renderEngine) {
         this.charWidth = new int[256];
@@ -49,5 +49,5 @@
             this.charWidth[i] = k + 2;
         }
-        this.fontTextureName = renderEngine.alllocateAndSetupTexture(read);
+        this.fontTextureName = renderEngine.allocateAndSetupTexture(read);
         this.fontDisplayLists = GLAllocation.generateDisplayLists(288);
         final Tessellator instance = Tessellator.instance;
@@ -69,5 +69,5 @@
             int k = (j >> 2 & 0x1) * 170 + n;
             int n2 = (j >> 1 & 0x1) * 170 + n;
-            int n5 = (j >> 0 & 0x1) * 170 + n;
+            int n5 = (j & 0x1) * 170 + n;
             if (j == 6) {
                 k += 85;
@@ -88,32 +88,32 @@
             }
             GL11.glNewList(this.fontDisplayLists + 256 + j, 4864);
-            GL11.glColor3f(k / 255.0f, n2 / 255.0f, n5 / 255.0f);
+            RenderEngine.glColor3f(k / 255.0f, n2 / 255.0f, n5 / 255.0f);
             GL11.glEndList();
         }
     }
-    
-    public void drawStringWithShadow(final String string, final int integer2, final int integer3, final int integer4) {
-        this.renderString(string, integer2 + 1, integer3 + 1, integer4, true);
-        this.drawString(string, integer2, integer3, integer4);
+
+    public void drawStringWithShadow(final String string, final int beginX, final int beginY, final int color) {
+        this.renderString(string, beginX + 1, beginY + 1, color, true);
+        this.drawString(string, beginX, beginY, color);
     }
-    
-    public void drawString(final String string, final int integer2, final int integer3, final int integer4) {
-        this.renderString(string, integer2, integer3, integer4, false);
+
+    public void drawString(final String string, final int beginX, final int beginY, final int color) {
+        this.renderString(string, beginX, beginY, color, false);
     }
-    
-    public void renderString(final String string, final int integer2, final int integer3, int integer4, final boolean boolean5) {
+
+    public void renderString(final String string, final int beginX, final int beginY, int color, final boolean renderShadow) {
         if (string == null) {
             return;
         }
-        if (boolean5) {
-            final int n = integer4 >> 24 & 0xFF;
-            final int n2 = integer4 & 0xFF000000;
-            integer4 = (integer4 & 0xFCFCFC) >> 2;
-            integer4 += n2;
+        if (renderShadow) {
+            final int n = color >> 24 & 0xFF;
+            final int n2 = color & 0xFF000000;
+            color = (color & 0xFCFCFC) >> 2;
+            color += n2;
             if (n == 255 || n == 0) {
-                integer4 |= 0xFF000000;
+                color |= 0xFF000000;
             }
             else {
-                integer4 |= n / 2 << 24;
+                color |= n / 2 << 24;
             }
         }
@@ -121,22 +121,34 @@
         GL11.glBlendFunc(770, 771);
         GL11.glBindTexture(3553, this.fontTextureName);
-        final float n3 = (integer4 >> 16 & 0xFF) / 255.0f;
-        final float n4 = (integer4 >> 8 & 0xFF) / 255.0f;
-        final float n5 = (integer4 & 0xFF) / 255.0f;
-        float n6 = (integer4 >> 24 & 0xFF) / 255.0f;
+        final float n3 = (color >> 16 & 0xFF) / 255.0f;
+        final float n4 = (color >> 8 & 0xFF) / 255.0f;
+        final float n5 = (color & 0xFF) / 255.0f;
+        float n6 = (color >> 24 & 0xFF) / 255.0f;
         if (n6 == 0.0f) {
             n6 = 1.0f;
         }
-        GL11.glColor4f(n3, n4, n5, n6);
+        RenderEngine.glColor4f(n3, n4, n5, n6);
         this.buffer.clear();
         GL11.glPushMatrix();
-        GL11.glTranslatef((float)integer2, (float)integer3, 0.0f);
-        for (int i = 0; i < string.length(); ++i) {
-            while (string.charAt(i) == '§' && string.length() > i + 1) {
-                int n7 = "0123456789abcdef".indexOf((int)string.toLowerCase().charAt(i + 1));
-                if (n7 < 0 || n7 > 15) {
-                    n7 = 15;
+        GL11.glTranslatef((float)beginX, (float)beginY, 0);
+        try {
+            for (int i = 0; i < string.length(); ++i) {
+                while (string.charAt(i) == '§' && string.length() > i + 2) {
+                    int n7 = "0123456789abcdef".indexOf(string.toLowerCase().charAt(i + 1));
+                    if (n7 < 0) {
+                        n7 = 15;
+                    }
+                    this.buffer.put(this.fontDisplayLists + 256 + n7 + (renderShadow ? 16 : 0));
+                    if (this.buffer.remaining() == 0) {
+                        this.buffer.flip();
+                        GL11.glCallLists(this.buffer);
+                        this.buffer.clear();
+                    }
+                    i += 2;
                 }
-                this.buffer.put(this.fontDisplayLists + 256 + n7 + (boolean5 ? 16 : 0));
+                int n7 = " !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_'abcdefghijklmnopqrstuvwxyz{|}~\u2302\u00c7\u00fc\u00e9\u00e2\u00e4\u00e0\u00e5\u00e7\u00ea\u00eb\u00e8\u00ef\u00ee\u00ec\u00c4\u00c5\u00c9\u00e6\u00c6\u00f4\u00f6\u00f2\u00fb\u00f9\u00ff\u00d6\u00dc\u00f8?\u00d8\u00d7\u0192\u00e1\u00ed\u00f3\u00fa\u00f1\u00d1???®¬???«»".indexOf((int)string.charAt(i));
+                if (n7 >= 0) {
+                    this.buffer.put(this.fontDisplayLists + n7 + 32);
+                }
                 if (this.buffer.remaining() == 0) {
                     this.buffer.flip();
@@ -144,22 +156,40 @@
                     this.buffer.clear();
                 }
-                i += 2;
             }
-            int n7 = " !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_'abcdefghijklmnopqrstuvwxyz{|}~\u2302\u00c7\u00fc\u00e9\u00e2\u00e4\u00e0\u00e5\u00e7\u00ea\u00eb\u00e8\u00ef\u00ee\u00ec\u00c4\u00c5\u00c9\u00e6\u00c6\u00f4\u00f6\u00f2\u00fb\u00f9\u00ff\u00d6\u00dc\u00f8?\u00d8\u00d7\u0192\u00e1\u00ed\u00f3\u00fa\u00f1\u00d1???®¬???«»".indexOf((int)string.charAt(i));
-            if (n7 >= 0) {
-                this.buffer.put(this.fontDisplayLists + n7 + 32);
+        } catch (Exception e) {
+            e.printStackTrace();
+            String errorStr = "§cUnexpected error";
+            for (int i = 0; i < errorStr.length(); ++i) {
+                while (errorStr.charAt(i) == '§' && errorStr.length() > i + 2) {
+                    int n7 = "0123456789abcdef".indexOf((int) errorStr.toLowerCase().charAt(i + 1));
+                    if (n7 < 0) {
+                        n7 = 15;
+                    }
+                    this.buffer.put(this.fontDisplayLists + 256 + n7 + (renderShadow ? 16 : 0));
+                    if (this.buffer.remaining() == 0) {
+                        this.buffer.flip();
+                        GL11.glCallLists(this.buffer);
+                        this.buffer.clear();
+                    }
+                    i += 2;
+                }
+                int n7 = " !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_'abcdefghijklmnopqrstuvwxyz{|}~\u2302\u00c7\u00fc\u00e9\u00e2\u00e4\u00e0\u00e5\u00e7\u00ea\u00eb\u00e8\u00ef\u00ee\u00ec\u00c4\u00c5\u00c9\u00e6\u00c6\u00f4\u00f6\u00f2\u00fb\u00f9\u00ff\u00d6\u00dc\u00f8?\u00d8\u00d7\u0192\u00e1\u00ed\u00f3\u00fa\u00f1\u00d1???®¬???«»".indexOf((int) errorStr.charAt(i));
+                if (n7 >= 0) {
+                    this.buffer.put(this.fontDisplayLists + n7 + 32);
+                }
+                if (this.buffer.remaining() == 0) {
+                    this.buffer.flip();
+                    GL11.glCallLists(this.buffer);
+                    this.buffer.clear();
+                }
             }
-            if (this.buffer.remaining() == 0) {
-                this.buffer.flip();
-                GL11.glCallLists(this.buffer);
-                this.buffer.clear();
-            }
         }
         this.buffer.flip();
         GL11.glCallLists(this.buffer);
+        RenderEngine.glColor4f(255, 255, 255, 255);
         GL11.glPopMatrix();
         GL11.glDisable(3042);
     }
-    
+
     public int getStringWidth(final String string) {
         if (string == null) {
