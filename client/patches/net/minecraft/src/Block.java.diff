--- Block.java
+++ Block.java
@@ -5,105 +5,24 @@
 
 public class Block {
-    public static final StepSound SOUND_POWDER_FOOTSTEP;
-    public static final StepSound SOUND_WOOD_FOOTSTEP;
-    public static final StepSound SOUND_GRAVEL_FOOTSTEP;
-    public static final StepSound SOUND_GRASS_FOOTSTEP;
-    public static final StepSound SOUND_STONE_FOOTSTEP;
-    public static final StepSound SOUND_METAL_FOOTSTEP;
-    public static final StepSound SOUND_GLASS_FOOTSTEP;
-    public static final StepSound SOUND_CLOTH_FOOTSTEP;
-    public static final StepSound SOUND_SAND_FOOTSTEP;
-    public static final Block[] BLOCKS_LIST;
-    public static final boolean[] TICK_ON_LOAD;
-    public static final boolean[] OPAQUE_CUBE_LOOKUP;
-    public static final boolean[] IS_BLOCK_CONTAINER;
-    public static final int[] LIGHT_OPACITY;
-    public static final boolean[] CAN_BLOCK_GRASS;
-    public static final int[] LIGHT_VALUE;
-    public static final Block STONE;
-    public static final BlockGrass GRASS;
-    public static final Block DIRT;
-    public static final Block COBBLESTONE;
-    public static final Block PLANKS;
-    public static final Block SAPLING;
-    public static final Block BEDROCK;
-    public static final Block WATER_MOVING;
-    public static final Block WATER_STILL;
-    public static final Block LAVA_MOVING;
-    public static final Block LAVA_STILL;
-    public static final Block SAND;
-    public static final Block GRAVEL;
-    public static final Block ORE_GOLD;
-    public static final Block ORE_IRON;
-    public static final Block ORE_COAL;
-    public static final Block WOOD;
-    public static final BlockLeaves LEAVES;
-    public static final Block SPONGE;
-    public static final Block GLASS;
-    public static final Block CLOTH_RED;
-    public static final Block CLOTH_ORANGE;
-    public static final Block CLOTH_YELLOW;
-    public static final Block CLOTH_CHARTREUSE;
-    public static final Block CLOTH_GREEN;
-    public static final Block CLOTH_SPRING_GREEN;
-    public static final Block CLOTH_CYAN;
-    public static final Block CLOTH_CAPRI;
-    public static final Block CLOTH_ULTRAMARINE;
-    public static final Block CLOTH_VIOLET;
-    public static final Block CLOTH_PURPLE;
-    public static final Block CLOTH_MAGENTA;
-    public static final Block CLOTH_ROSE;
-    public static final Block CLOTH_DARK_GRAY;
-    public static final Block CLOTH;
-    public static final Block CLOTH_WHITE;
-    public static final BlockFlower PLANT_YELLOW;
-    public static final BlockFlower PLANT_RED;
-    public static final BlockFlower MUSHROOM_BROWN;
-    public static final BlockFlower MUSHROOM_RED;
-    public static final Block BLOCK_GOLD;
-    public static final Block BLOCK_IRON;
-    public static final Block STAIR_DOUBLE;
-    public static final Block STAIR_SINGLE;
-    public static final Block BRICK;
-    public static final Block TNT;
-    public static final Block BOOKSHELF;
-    public static final Block COBBLESTONE_MOSSY;
-    public static final Block OBSIDIAN;
-    public static final Block TORCH;
-    public static final BlockFire FIRE;
-    public static final Block MOB_SPAWNER;
-    public static final Block STAIR_COMPACT_WOOD;
-    public static final Block CHEST;
-    public static final Block REDSTONE_WIRE;
-    public static final Block ORE_DIAMOND;
-    public static final Block BLOCK_DIAMOND;
-    public static final Block WORKBENCH;
-    public static final Block CROPS;
-    public static final Block TILLED_FIELD;
-    public static final Block STONE_OVEN_IDLE;
-    public static final Block STONE_OVEN_ACTIVE;
-    public static final Block SIGN_STANDING;
-    public static final Block DOOR_WOOD;
-    public static final Block LADDER;
-    public static final Block MINECART_TRACK;
-    public static final Block STAIR_COMPACT_STONE;
-    public static final Block SIGN_WALL;
-    public static final Block LEVER;
-    public static final Block PRESSURE_PLATE_STONE;
-    public static final Block DOOR_IRON;
-    public static final Block PRESSURE_PLATE_WOOD;
-    public static final Block ORE_REDSTONE;
-    public static final Block ORE_REDSTONE_GLOWING;
-    public static final Block TORCH_REDSTONE_IDLE;
-    public static final Block TORCH_REDSTONE_ACTIVE;
-    public static final Block BUTTON;
-    public static final Block SNOW;
-    public static final Block ICE;
-    public static final Block BLOCK_SNOW;
-    public static final Block CACTUS;
-    public static final Block BLOCK_CLAY;
-    public static final Block REED;
-    public static Block JUKEBOX;
-    public static final Block FENCE;
+    public static StepSound SOUND_POWDER_FOOTSTEP;
+    public static StepSound SOUND_WOOD_FOOTSTEP;
+    public static StepSound SOUND_GRAVEL_FOOTSTEP;
+    public static StepSound SOUND_GRASS_FOOTSTEP;
+    public static StepSound SOUND_STONE_FOOTSTEP;
+    public static StepSound SOUND_METAL_FOOTSTEP;
+    public static StepSound SOUND_GLASS_FOOTSTEP;
+    public static StepSound SOUND_CLOTH_FOOTSTEP;
+    public static StepSound SOUND_SAND_FOOTSTEP;
+    public static final Block[] BLOCKS_LIST = new Block[256];
+    public static final boolean[] TICK_ON_LOAD = new boolean[256];
+    public static final boolean[] OPAQUE_CUBE_LOOKUP = new boolean[256];
+    public static final boolean[] IS_BLOCK_CONTAINER = new boolean[256];
+    public static final int[] LIGHT_OPACITY_R = new int[256];
+    public static final int[] LIGHT_OPACITY_G = new int[256];
+    public static final int[] LIGHT_OPACITY_B = new int[256];
+    public static final boolean[] CAN_BLOCK_GRASS = new boolean[256];
+    public static final int[] LIGHT_VALUE_R = new int[256];
+    public static final int[] LIGHT_VALUE_G = new int[256];
+    public static final int[] LIGHT_VALUE_B = new int[256];
     public int blockIndexInTexture;
     public final int blockID;
@@ -120,37 +39,157 @@
     public final Material material;
     public float slipperiness;
-    public static final Block QuadWindowGlassBlock;
-    public static final Block PillarBlock;
-    public static final Block TileBlock;
-    public static final Block TileBlock2;
-    public static final Block TileBlock2NonFucked;
-    public static final Block dimensionFloorBlock;
-    public static final Block dimensionWallBlock;
-    public static final Block dbgBlock;
-    public static final Block TileBlock3;
-    public static final Block TileBlock4;
-    public static final Block fakeGrass;
-    public static final Block AltMojangHypostasisAnemo;
-    public static final Block imgur9F0A3un;
-    public static final Block yeahWeHadFunWithThisAsYouCanSee;
-    public static final Block BarrierBlock;
-    public static final Block StairLadderBlock;
-    public static final Block fakeDirt;
-    public static final Block fakeRock;
-    public static final Block fakeSand;
-    public static final Block woolPink;
-    public static final Block woolBlue;
-    public static final Block woolGreen;
-    public static final Block woolBlack;
-    public static final Block dbg2Block;
-    public static final Block saltBlock;
-    public static final Block glowingFlower;
-    public static final Block glowingFlowerInfBasic;
-    public static final Block glowingFlowerInfGold;
-    public static final Block glowingFlowerInfObsidian;
-    public static final Block blueFireIdk;
-    public static final Block safe;
-    
-    static {
+
+    // =================================
+    // Common API part
+    // =================================
+
+    public static Block STONE;
+    public static BlockGrass GRASS;
+    public static Block DIRT;
+    public static Block COBBLESTONE;
+    public static Block PLANKS;
+    public static Block SAPLING;
+    public static Block BEDROCK;
+    public static Block WATER_MOVING;
+    public static Block WATER_STILL;
+    public static Block LAVA_MOVING;
+    public static Block LAVA_STILL;
+    public static Block SAND;
+    public static Block GRAVEL;
+    public static Block ORE_GOLD;
+    public static Block ORE_IRON;
+    public static Block ORE_COAL;
+    public static Block WOOD;
+    public static BlockLeaves LEAVES;
+    public static Block SPONGE;
+    public static Block GLASS;
+    public static Block CLOTH_RED;
+    public static Block CLOTH_ORANGE;
+    public static Block CLOTH_YELLOW;
+    public static Block CLOTH_CHARTREUSE;
+    public static Block CLOTH_GREEN;
+    public static Block CLOTH_SPRING_GREEN;
+    public static Block CLOTH_CYAN;
+    public static Block CLOTH_CAPRI;
+    public static Block CLOTH_ULTRAMARINE;
+    public static Block CLOTH_VIOLET;
+    public static Block CLOTH_PURPLE;
+    public static Block CLOTH_MAGENTA;
+    public static Block CLOTH_ROSE;
+    public static Block CLOTH_DARK_GRAY;
+    public static Block CLOTH;
+    public static Block CLOTH_WHITE;
+    public static BlockFlower PLANT_YELLOW;
+    public static BlockFlower PLANT_RED;
+    public static BlockFlower MUSHROOM_BROWN;
+    public static BlockFlower MUSHROOM_RED;
+    public static Block BLOCK_GOLD;
+    public static Block BLOCK_IRON;
+    public static Block STAIR_DOUBLE;
+    public static Block STAIR_SINGLE;
+    public static Block BRICK;
+    public static Block TNT;
+    public static Block BOOKSHELF;
+    public static Block COBBLESTONE_MOSSY;
+    public static Block OBSIDIAN;
+    public static Block TORCH;
+    public static BlockFire FIRE;
+    public static Block MOB_SPAWNER;
+    public static Block STAIR_COMPACT_WOOD;
+    public static Block CHEST;
+    public static Block REDSTONE_WIRE;
+    public static Block ORE_DIAMOND;
+    public static Block BLOCK_DIAMOND;
+    public static Block WORKBENCH;
+    public static Block CROPS;
+    public static Block TILLED_FIELD;
+    public static Block STONE_OVEN_IDLE;
+    public static Block STONE_OVEN_ACTIVE;
+    public static Block SIGN_STANDING;
+    public static Block DOOR_WOOD;
+    public static Block LADDER;
+    public static Block MINECART_TRACK;
+    public static Block STAIR_COMPACT_STONE;
+    public static Block SIGN_WALL;
+    public static Block LEVER;
+    public static Block PRESSURE_PLATE_STONE;
+    public static Block DOOR_IRON;
+    public static Block PRESSURE_PLATE_WOOD;
+    public static Block ORE_REDSTONE;
+    public static Block ORE_REDSTONE_GLOWING;
+    public static Block TORCH_REDSTONE_IDLE;
+    public static Block TORCH_REDSTONE_ACTIVE;
+    public static Block BUTTON;
+    public static Block SNOW;
+    public static Block ICE;
+    public static Block BLOCK_SNOW;
+    public static Block CACTUS;
+    public static Block BLOCK_CLAY;
+    public static Block REED;
+    public static Block JUKEBOX;
+    public static Block FENCE;
+    public static Block QUAD_WINDOW_GLASS_BLOCK;
+    public static Block PILLAR_BLOCK;
+    public static Block TILE_BLOCK;
+    public static Block TILE_BLOCK_2;
+    public static Block TILE_BLOCK_2_NON_FUCKED;
+    public static Block DIMENSION_FLOOR_BLOCK;
+    public static Block DIMENSION_WALL_BLOCK;
+    public static Block DBG_BLOCK;
+    public static Block TILE_BLOCK_3;
+    public static Block TILE_BLOCK_4;
+    public static Block FAKE_GRASS;
+    public static Block ALT_MOJANG_HYPOSTASIS_ANEMO;
+    public static Block IMGUR_9F0A3UN;
+    public static Block YEAH_WE_HAD_FUN_WITH_THIS_AS_YOU_CAN_SEE;
+    public static Block BARRIER_BLOCK;
+    public static Block STAIR_LADDER_BLOCK;
+    public static Block FAKE_DIRT;
+    public static Block FAKE_ROCK;
+    public static Block FAKE_SAND;
+    public static Block WOOL_PINK;
+    public static Block WOOL_BLUE;
+    public static Block WOOL_GREEN;
+    public static Block WOOL_BLACK;
+    public static Block DBG_2_BLOCK;
+    public static Block SALT_BLOCK;
+    public static Block GLOWING_FLOWER;
+    public static Block GLOWING_FLOWER_INF_BASIC;
+    public static Block GLOWING_FLOWER_INF_GOLD;
+    public static Block GLOWING_FLOWER_INF_OBSIDIAN;
+    public static Block BLUE_FIRE_IDK;
+    public static Block SAFE;
+
+    // ==============================
+    // Common API end
+    // ==============================
+
+    protected String itemName;
+    protected int rarity = 0;
+
+    public String getName() {
+        return itemName;
+    }
+
+    public Block setName(String itemName) {
+        this.itemName = itemName;
+        return this;
+    }
+
+    public int getRarity() {
+        return rarity;
+    }
+
+    public Block setRarity(int rarity) {
+        this.rarity = rarity;
+        return this;
+    }
+
+
+    public int getBlockID() {
+        return blockID;
+    }
+
+    public static void initAll() {
         SOUND_POWDER_FOOTSTEP = new StepSound("stone", 1.0f, 1.0f);
         SOUND_WOOD_FOOTSTEP = new StepSound("wood", 1.0f, 1.0f);
@@ -162,31 +201,24 @@
         SOUND_CLOTH_FOOTSTEP = new StepSound("cloth", 1.0f, 1.0f);
         SOUND_SAND_FOOTSTEP = new StepSoundSand("sand", 1.0f, 1.0f);
-        BLOCKS_LIST = new Block[256];
-        TICK_ON_LOAD = new boolean[256];
-        OPAQUE_CUBE_LOOKUP = new boolean[256];
-        IS_BLOCK_CONTAINER = new boolean[256];
-        LIGHT_OPACITY = new int[256];
-        CAN_BLOCK_GRASS = new boolean[256];
-        LIGHT_VALUE = new int[256];
-        STONE = new BlockStone(1, 1).setHardness(1.5f).setResistance(10.0f).setStepSound(Block.SOUND_STONE_FOOTSTEP);
-        GRASS = (BlockGrass)new BlockGrass(2).setHardness(0.6f).setStepSound(Block.SOUND_GRASS_FOOTSTEP);
-        DIRT = new BlockDirt(3, 2).setHardness(0.5f).setStepSound(Block.SOUND_GRAVEL_FOOTSTEP);
-        COBBLESTONE = new Block(4, 16, Material.ROCK).setHardness(2.0f).setResistance(10.0f).setStepSound(Block.SOUND_STONE_FOOTSTEP);
-        PLANKS = new Block(5, 4, Material.WOOD).setHardness(2.0f).setResistance(5.0f).setStepSound(Block.SOUND_WOOD_FOOTSTEP);
-        SAPLING = new BlockSapling(6, 15).setHardness(0.0f).setStepSound(Block.SOUND_GRASS_FOOTSTEP);
-        BEDROCK = new Block(7, 17, Material.ROCK).setHardness(-1.0f).setResistance(6000.0f).setStepSound(Block.SOUND_STONE_FOOTSTEP);
-        WATER_MOVING = new BlockFlowing(8, Material.WATER).setHardness(100.0f).setLightOpacity(3);
-        WATER_STILL = new BlockStationary(9, Material.WATER).setHardness(100.0f).setLightOpacity(3);
-        LAVA_MOVING = new BlockFlowing(10, Material.LAVA).setHardness(0.0f).setLightValue(1.0f).setLightOpacity(255);
-        LAVA_STILL = new BlockStationary(11, Material.LAVA).setHardness(100.0f).setLightValue(1.0f).setLightOpacity(255);
-        SAND = new BlockSand(12, 18).setHardness(0.5f).setStepSound(Block.SOUND_SAND_FOOTSTEP);
-        GRAVEL = new BlockGravel(13, 19).setHardness(0.6f).setStepSound(Block.SOUND_GRAVEL_FOOTSTEP);
-        ORE_GOLD = new BlockOre(14, 32).setHardness(3.0f).setResistance(5.0f).setStepSound(Block.SOUND_STONE_FOOTSTEP);
-        ORE_IRON = new BlockOre(15, 33).setHardness(3.0f).setResistance(5.0f).setStepSound(Block.SOUND_STONE_FOOTSTEP);
-        ORE_COAL = new BlockOre(16, 34).setHardness(3.0f).setResistance(5.0f).setStepSound(Block.SOUND_STONE_FOOTSTEP);
-        WOOD = new BlockLog(17).setHardness(2.0f).setStepSound(Block.SOUND_WOOD_FOOTSTEP);
-        LEAVES = (BlockLeaves)new BlockLeaves(18, 52).setHardness(0.2f).setLightOpacity(1).setStepSound(Block.SOUND_GRASS_FOOTSTEP);
-        SPONGE = new BlockSponge(19).setHardness(0.6f).setStepSound(Block.SOUND_GRASS_FOOTSTEP);
-        GLASS = new BlockGlass(20, 49, Material.GLASS, false).setHardness(0.3f).setStepSound(Block.SOUND_GLASS_FOOTSTEP);
+        STONE = new BlockStone(1, 1).setHardness(1.5f).setResistance(10.0f).setStepSound(Block.SOUND_STONE_FOOTSTEP).setName("Stone");
+        GRASS = (BlockGrass)new BlockGrass(2).setHardness(0.6f).setStepSound(Block.SOUND_GRASS_FOOTSTEP).setName("Grass block");
+        DIRT = new BlockDirt(3, 2).setHardness(0.5f).setStepSound(Block.SOUND_GRAVEL_FOOTSTEP).setName("Dirt");
+        COBBLESTONE = new Block(4, 16, Material.ROCK).setHardness(2.0f).setResistance(10.0f).setStepSound(Block.SOUND_STONE_FOOTSTEP).setName("Cobblestone");
+        PLANKS = new Block(5, 4, Material.WOOD).setHardness(2.0f).setResistance(5.0f).setStepSound(Block.SOUND_WOOD_FOOTSTEP).setName("Oak planks");
+        SAPLING = new BlockSapling(6, 15).setHardness(0.0f).setStepSound(Block.SOUND_GRASS_FOOTSTEP).setName("Oak sapling");
+        BEDROCK = new Block(7, 17, Material.ROCK).setHardness(-1.0f).setResistance(6000.0f).setStepSound(Block.SOUND_STONE_FOOTSTEP).setName("Bedrock").setRarity(2);
+        WATER_MOVING = new BlockFlowing(8, Material.WATER).setHardness(100.0f).setLightOpacity(4, 4, 3).setName("Water (moving)").setRarity(3);
+        WATER_STILL = new BlockStationary(9, Material.WATER).setHardness(100.0f).setLightOpacity(4, 4, 3).setName("Water (still)").setRarity(3);
+        LAVA_MOVING = new BlockFlowing(10, Material.LAVA).setHardness(0.0f).setLightValue(16, 10, 0).setLightOpacity(255, 255, 255).setName("Lava (moving)").setRarity(3);
+        LAVA_STILL = new BlockStationary(11, Material.LAVA).setHardness(100.0f).setLightValue(16, 10, 0).setLightOpacity(255, 255, 255).setName("Lava (still)").setRarity(3);
+        SAND = new BlockSand(12, 18).setHardness(0.5f).setStepSound(Block.SOUND_SAND_FOOTSTEP).setName("Sand");
+        GRAVEL = new BlockGravel(13, 19).setHardness(0.6f).setStepSound(Block.SOUND_GRAVEL_FOOTSTEP).setName("Gravel");
+        ORE_GOLD = new BlockOre(14, 32).setHardness(3.0f).setResistance(5.0f).setStepSound(Block.SOUND_STONE_FOOTSTEP).setName("Golden ore");
+        ORE_IRON = new BlockOre(15, 33).setHardness(3.0f).setResistance(5.0f).setStepSound(Block.SOUND_STONE_FOOTSTEP).setName("Iron ore");
+        ORE_COAL = new BlockOre(16, 34).setHardness(3.0f).setResistance(5.0f).setStepSound(Block.SOUND_STONE_FOOTSTEP).setName("Coal ore");
+        WOOD = new BlockLog(17).setHardness(2.0f).setStepSound(Block.SOUND_WOOD_FOOTSTEP).setName("Oak log");
+        LEAVES = (BlockLeaves)new BlockLeaves(18, 52).setHardness(0.2f).setLightOpacity(1, 1, 1).setStepSound(Block.SOUND_GRASS_FOOTSTEP).setName("Oak leaves");
+        SPONGE = new BlockSponge(19).setHardness(0.6f).setStepSound(Block.SOUND_GRASS_FOOTSTEP).setName("Sponge");
+        GLASS = new BlockGlass(20, 49, Material.GLASS, false).setHardness(0.3f).setStepSound(Block.SOUND_GLASS_FOOTSTEP).setName("Glass");
         CLOTH_RED = null;
         CLOTH_ORANGE = null;
@@ -203,93 +235,93 @@
         CLOTH_ROSE = null;
         CLOTH_DARK_GRAY = null;
-        CLOTH = new Block(35, 64, Material.CLOTH).setHardness(0.8f).setStepSound(Block.SOUND_CLOTH_FOOTSTEP);
+        CLOTH = new Block(35, 64, Material.CLOTH).setHardness(0.8f).setStepSound(Block.SOUND_CLOTH_FOOTSTEP).setName("Cloth");
         CLOTH_WHITE = null;
-        PLANT_YELLOW = (BlockFlower)new BlockFlower(37, 13).setHardness(0.0f).setStepSound(Block.SOUND_GRASS_FOOTSTEP);
-        PLANT_RED = (BlockFlower)new BlockFlower(38, 12).setHardness(0.0f).setStepSound(Block.SOUND_GRASS_FOOTSTEP);
-        MUSHROOM_BROWN = (BlockFlower)new BlockMushroom(39, 29).setHardness(0.0f).setStepSound(Block.SOUND_GRASS_FOOTSTEP).setLightValue(0.125f);
-        MUSHROOM_RED = (BlockFlower)new BlockMushroom(40, 28).setHardness(0.0f).setStepSound(Block.SOUND_GRASS_FOOTSTEP);
-        BLOCK_GOLD = new BlockOreBlock(41, 39).setHardness(3.0f).setResistance(10.0f).setStepSound(Block.SOUND_METAL_FOOTSTEP);
-        BLOCK_IRON = new BlockOreBlock(42, 38).setHardness(5.0f).setResistance(10.0f).setStepSound(Block.SOUND_METAL_FOOTSTEP);
-        STAIR_DOUBLE = new BlockStep(43, true).setHardness(2.0f).setResistance(10.0f).setStepSound(Block.SOUND_STONE_FOOTSTEP);
-        STAIR_SINGLE = new BlockStep(44, false).setHardness(2.0f).setResistance(10.0f).setStepSound(Block.SOUND_STONE_FOOTSTEP);
-        BRICK = new Block(45, 7, Material.ROCK).setHardness(2.0f).setResistance(10.0f).setStepSound(Block.SOUND_STONE_FOOTSTEP);
-        TNT = new BlockTNT(46, 8).setHardness(0.0f).setStepSound(Block.SOUND_GRASS_FOOTSTEP);
-        BOOKSHELF = new BlockBookshelf(47, 35).setHardness(1.5f).setStepSound(Block.SOUND_WOOD_FOOTSTEP);
-        COBBLESTONE_MOSSY = new Block(48, 36, Material.ROCK).setHardness(2.0f).setResistance(10.0f).setStepSound(Block.SOUND_STONE_FOOTSTEP);
-        OBSIDIAN = new BlockObsidian(49, 37).setHardness(10.0f).setResistance(2000.0f).setStepSound(Block.SOUND_STONE_FOOTSTEP);
-        TORCH = new BlockTorch(50, 80).setHardness(0.0f).setLightValue(0.9375f).setStepSound(Block.SOUND_WOOD_FOOTSTEP);
-        FIRE = (BlockFire)new BlockFire(51, 31).setHardness(0.0f).setLightValue(1.0f).setStepSound(Block.SOUND_WOOD_FOOTSTEP);
-        MOB_SPAWNER = new BlockMobSpawner(52, 65).setHardness(5.0f).setStepSound(Block.SOUND_METAL_FOOTSTEP);
-        STAIR_COMPACT_WOOD = new BlockStairs(53, Block.PLANKS);
-        CHEST = new BlockChest(54).setHardness(2.5f).setStepSound(Block.SOUND_WOOD_FOOTSTEP);
-        REDSTONE_WIRE = new BlockRedstoneWire(55, 84).setHardness(0.0f).setStepSound(Block.SOUND_POWDER_FOOTSTEP);
-        ORE_DIAMOND = new BlockOre(56, 50).setHardness(3.0f).setResistance(5.0f).setStepSound(Block.SOUND_STONE_FOOTSTEP);
-        BLOCK_DIAMOND = new BlockOreBlock(57, 40).setHardness(5.0f).setResistance(10.0f).setStepSound(Block.SOUND_METAL_FOOTSTEP);
-        WORKBENCH = new BlockWorkbench(58).setHardness(2.5f).setStepSound(Block.SOUND_WOOD_FOOTSTEP);
-        CROPS = new BlockCrops(59, 88).setHardness(0.0f).setStepSound(Block.SOUND_GRASS_FOOTSTEP);
-        TILLED_FIELD = new BlockFarmland(60).setHardness(0.6f).setStepSound(Block.SOUND_GRAVEL_FOOTSTEP);
-        STONE_OVEN_IDLE = new BlockFurnace(61, false).setHardness(3.5f).setStepSound(Block.SOUND_STONE_FOOTSTEP);
-        STONE_OVEN_ACTIVE = new BlockFurnace(62, true).setHardness(3.5f).setStepSound(Block.SOUND_STONE_FOOTSTEP).setLightValue(0.875f);
-        SIGN_STANDING = new BlockSign(63, TileEntitySign.class, true).setHardness(1.0f).setStepSound(Block.SOUND_WOOD_FOOTSTEP);
-        DOOR_WOOD = new BlockDoor(64, Material.WOOD).setHardness(3.0f).setStepSound(Block.SOUND_WOOD_FOOTSTEP);
-        LADDER = new BlockLadder(65, 83).setHardness(0.4f).setStepSound(Block.SOUND_WOOD_FOOTSTEP);
-        MINECART_TRACK = new BlockMinecartTrack(66, 128).setHardness(0.7f).setStepSound(Block.SOUND_METAL_FOOTSTEP);
-        STAIR_COMPACT_STONE = new BlockStairs(67, Block.COBBLESTONE);
-        SIGN_WALL = new BlockSign(68, TileEntitySign.class, false).setHardness(1.0f).setStepSound(Block.SOUND_WOOD_FOOTSTEP);
-        LEVER = new BlockLever(69, 96).setHardness(0.5f).setStepSound(Block.SOUND_WOOD_FOOTSTEP);
-        PRESSURE_PLATE_STONE = new BlockPressurePlate(70, Block.STONE.blockIndexInTexture, EnumMobType.MOBS).setHardness(0.5f).setStepSound(Block.SOUND_STONE_FOOTSTEP);
-        DOOR_IRON = new BlockDoor(71, Material.IRON).setHardness(5.0f).setStepSound(Block.SOUND_METAL_FOOTSTEP);
-        PRESSURE_PLATE_WOOD = new BlockPressurePlate(72, Block.PLANKS.blockIndexInTexture, EnumMobType.EVERYTHING).setHardness(0.5f).setStepSound(Block.SOUND_WOOD_FOOTSTEP);
-        ORE_REDSTONE = new BlockRedstoneOre(73, 51, false).setHardness(3.0f).setResistance(5.0f).setStepSound(Block.SOUND_STONE_FOOTSTEP);
-        ORE_REDSTONE_GLOWING = new BlockRedstoneOre(74, 51, true).setLightValue(0.625f).setHardness(3.0f).setResistance(5.0f).setStepSound(Block.SOUND_STONE_FOOTSTEP);
-        TORCH_REDSTONE_IDLE = new BlockRedstoneTorch(75, 115, false).setHardness(0.0f).setStepSound(Block.SOUND_WOOD_FOOTSTEP);
-        TORCH_REDSTONE_ACTIVE = new BlockRedstoneTorch(76, 99, true).setHardness(0.0f).setLightValue(0.5f).setStepSound(Block.SOUND_WOOD_FOOTSTEP);
-        BUTTON = new BlockButton(77, Block.STONE.blockIndexInTexture).setHardness(0.5f).setStepSound(Block.SOUND_STONE_FOOTSTEP);
-        SNOW = new BlockSnow(78, 66).setHardness(0.1f).setStepSound(Block.SOUND_CLOTH_FOOTSTEP);
-        ICE = new BlockIce(79, 67).setHardness(0.5f).setLightOpacity(3).setStepSound(Block.SOUND_GLASS_FOOTSTEP);
-        BLOCK_SNOW = new BlockSnowBlock(80, 66).setHardness(0.2f).setStepSound(Block.SOUND_CLOTH_FOOTSTEP);
-        CACTUS = new BlockCactus(81, 70).setHardness(0.4f).setStepSound(Block.SOUND_CLOTH_FOOTSTEP);
-        BLOCK_CLAY = new BlockClay(82, 72).setHardness(0.6f).setStepSound(Block.SOUND_GRAVEL_FOOTSTEP);
-        REED = new BlockReed(83, 73).setHardness(0.0f).setStepSound(Block.SOUND_GRASS_FOOTSTEP);
-        Block.JUKEBOX = new BlockJukebox(84, 74).setHardness(2.0f).setResistance(10.0f).setStepSound(Block.SOUND_STONE_FOOTSTEP);
-        FENCE = new BlockFence(85, 4).setHardness(2.0f).setResistance(5.0f).setStepSound(Block.SOUND_WOOD_FOOTSTEP);
-        QuadWindowGlassBlock = new BlockGlass(90, 145, Material.GLASS, false).setHardness(0.3f).setStepSound(Block.SOUND_GLASS_FOOTSTEP);
-        PillarBlock = new Block(91, 144, Material.WOOD).setHardness(2.0f).setResistance(5.0f).setStepSound(Block.SOUND_WOOD_FOOTSTEP);
-        TileBlock = new Block(92, 146, Material.ROCK).setHardness(2.0f).setResistance(10.0f).setStepSound(Block.SOUND_STONE_FOOTSTEP);
-        TileBlock2 = new Block(93, 147, Material.ROCK).setHardness(2.0f).setResistance(10.0f).setStepSound(Block.SOUND_STONE_FOOTSTEP);
-        TileBlock2NonFucked = new BlockGlass(94, 147, Material.GLASS, false).setHardness(0.3f).setStepSound(Block.SOUND_GLASS_FOOTSTEP);
-        dimensionFloorBlock = new Block(95, 148, Material.ROCK).setHardness(2.0f).setResistance(10.0f).setStepSound(Block.SOUND_STONE_FOOTSTEP);
-        dimensionWallBlock = new Block(96, 149, Material.ROCK).setHardness(2.0f).setResistance(10.0f).setStepSound(Block.SOUND_STONE_FOOTSTEP);
-        dbgBlock = new Block(97, 150, Material.ROCK).setHardness(2.0f).setResistance(10.0f).setStepSound(Block.SOUND_STONE_FOOTSTEP);
-        TileBlock3 = new Block(98, 151, Material.ROCK).setHardness(2.0f).setResistance(10.0f).setStepSound(Block.SOUND_STONE_FOOTSTEP);
-        TileBlock4 = new Block(99, 152, Material.ROCK).setHardness(2.0f).setResistance(10.0f).setStepSound(Block.SOUND_STONE_FOOTSTEP);
-        fakeGrass = new BlockMultiSided(100, 153, 154, 155).setHardness(0.6f).setStepSound(Block.SOUND_GRASS_FOOTSTEP);
-        AltMojangHypostasisAnemo = new Block(101, 156, Material.ROCK).setHardness(2.0f).setResistance(10.0f).setStepSound(Block.SOUND_STONE_FOOTSTEP);
-        imgur9F0A3un = new Block(102, 157, Material.ROCK).setHardness(2.0f).setResistance(10.0f).setStepSound(Block.SOUND_STONE_FOOTSTEP);
-        yeahWeHadFunWithThisAsYouCanSee = new Block(103, 158, Material.ROCK).setHardness(2.0f).setResistance(10.0f).setStepSound(Block.SOUND_STONE_FOOTSTEP);
-        BarrierBlock = new BlockHidable(104, 159, Material.GLASS, false).setHardness(0.3f).setStepSound(Block.SOUND_GLASS_FOOTSTEP);
-        StairLadderBlock = new BlockLadder(105, 161).setHardness(0.4f).setStepSound(Block.SOUND_WOOD_FOOTSTEP);
-        fakeDirt = new Block(106, 162, Material.ROCK).setHardness(0.6f).setResistance(10.0f).setStepSound(Block.SOUND_GRASS_FOOTSTEP);
-        fakeRock = new Block(107, 163, Material.ROCK).setHardness(2.0f).setResistance(10.0f).setStepSound(Block.SOUND_STONE_FOOTSTEP);
-        fakeSand = new BlockSand(108, 164).setHardness(0.5f).setStepSound(Block.SOUND_SAND_FOOTSTEP);
-        woolPink = new Block(109, 165, Material.CLOTH).setHardness(0.8f).setStepSound(Block.SOUND_CLOTH_FOOTSTEP);
-        woolBlue = new Block(110, 166, Material.CLOTH).setHardness(0.8f).setStepSound(Block.SOUND_CLOTH_FOOTSTEP);
-        woolGreen = new Block(111, 167, Material.CLOTH).setHardness(0.8f).setStepSound(Block.SOUND_CLOTH_FOOTSTEP);
-        woolBlack = new Block(112, 168, Material.CLOTH).setHardness(0.8f).setStepSound(Block.SOUND_CLOTH_FOOTSTEP);
-        dbg2Block = new BlockGlowing(113, 150, 1).setHardness(0.0f).setLightValue(0.9375f).setStepSound(Block.SOUND_STONE_FOOTSTEP);
-        saltBlock = new BlockMultiSided(114, 170, 169, 170).setHardness(0.6f).setStepSound(Block.SOUND_STONE_FOOTSTEP);
-        glowingFlower = new BlockGlowingFlower(115, 171, 1).setHardness(0.0f).setLightValue(0.9375f).setStepSound(Block.SOUND_GRASS_FOOTSTEP);
-        blueFireIdk = new BlockGlowing(116, 172, 2).setHardness(0.0f).setLightValue(0.9375f).setStepSound(Block.SOUND_STONE_FOOTSTEP);
-        glowingFlowerInfBasic = new BlockGlowingFlowerInfused(117, 173, 1, 2).setHardness(0.0f).setLightValue(0.9375f).setStepSound(Block.SOUND_GRASS_FOOTSTEP);
-        glowingFlowerInfGold = new BlockGlowingFlowerInfused(118, 174, 1, 4).setHardness(0.0f).setLightValue(0.9375f).setStepSound(Block.SOUND_GRASS_FOOTSTEP);
-        glowingFlowerInfObsidian = new BlockGlowingFlowerInfused(119, 175, 1, 7).setHardness(0.0f).setLightValue(0.9375f).setStepSound(Block.SOUND_GRASS_FOOTSTEP);
-        safe = new BlockSafe(120, 177, 176, 177).setHardness(1.5f).setResistance(10.0f).setStepSound(Block.SOUND_STONE_FOOTSTEP);
+        PLANT_YELLOW = (BlockFlower) new BlockFlower(37, 13).setHardness(0.0f).setStepSound(Block.SOUND_GRASS_FOOTSTEP).setName("Dandelion");
+        PLANT_RED = (BlockFlower) new BlockFlower(38, 12).setHardness(0.0f).setStepSound(Block.SOUND_GRASS_FOOTSTEP).setName("Rose");
+        MUSHROOM_BROWN = (BlockFlower) new BlockMushroom(39, 29).setHardness(0.0f).setStepSound(Block.SOUND_GRASS_FOOTSTEP).setLightValue(0, 1, 2).setName("Brown mushroom");
+        MUSHROOM_RED = (BlockFlower) new BlockMushroom(40, 28).setHardness(0.0f).setStepSound(Block.SOUND_GRASS_FOOTSTEP).setName("Red mushroom");
+        BLOCK_GOLD = new BlockOreBlock(41, 39).setHardness(3.0f).setResistance(10.0f).setStepSound(Block.SOUND_METAL_FOOTSTEP).setName("Golden block");
+        BLOCK_IRON = new BlockOreBlock(42, 38).setHardness(5.0f).setResistance(10.0f).setStepSound(Block.SOUND_METAL_FOOTSTEP).setName("Iron block");
+        STAIR_DOUBLE = new BlockStep(43, true).setHardness(2.0f).setResistance(10.0f).setStepSound(Block.SOUND_STONE_FOOTSTEP).setName("Double stone slab");
+        STAIR_SINGLE = new BlockStep(44, false).setHardness(2.0f).setResistance(10.0f).setStepSound(Block.SOUND_STONE_FOOTSTEP).setName("Stone slab");
+        BRICK = new Block(45, 7, Material.ROCK).setHardness(2.0f).setResistance(10.0f).setStepSound(Block.SOUND_STONE_FOOTSTEP).setName("Bricks");
+        TNT = new BlockTNT(46, 8).setHardness(0.0f).setStepSound(Block.SOUND_GRASS_FOOTSTEP).setName("TNT");
+        BOOKSHELF = new BlockBookshelf(47, 35).setHardness(1.5f).setStepSound(Block.SOUND_WOOD_FOOTSTEP).setName("Bookshelf");
+        COBBLESTONE_MOSSY = new Block(48, 36, Material.ROCK).setHardness(2.0f).setResistance(10.0f).setStepSound(Block.SOUND_STONE_FOOTSTEP).setName("Mossy cobblestone");
+        OBSIDIAN = new BlockObsidian(49, 37).setHardness(10.0f).setResistance(2000.0f).setStepSound(Block.SOUND_STONE_FOOTSTEP).setName("Obsidian");
+        TORCH = new BlockTorch(50, 80).setHardness(0.0f).setLightValue(15, 8, 0).setStepSound(Block.SOUND_WOOD_FOOTSTEP).setName("Torch");
+        FIRE = (BlockFire)new BlockFire(51, 31).setHardness(0.0f).setLightValue(15, 10, 0).setStepSound(Block.SOUND_WOOD_FOOTSTEP).setName("Fire");
+        MOB_SPAWNER = new BlockMobSpawner(52, 65).setHardness(5.0f).setStepSound(Block.SOUND_METAL_FOOTSTEP).setName("Spawner").setRarity(3);
+        STAIR_COMPACT_WOOD = new BlockStairs(53, Block.PLANKS).setName("Wooden stairs");
+        CHEST = new BlockChest(54).setHardness(2.5f).setStepSound(Block.SOUND_WOOD_FOOTSTEP).setName("Wooden chest");
+        REDSTONE_WIRE = new BlockRedstoneWire(55, 84).setHardness(0.0f).setStepSound(Block.SOUND_POWDER_FOOTSTEP).setName("Greenstone wire").setRarity(3);
+        ORE_DIAMOND = new BlockOre(56, 50).setHardness(3.0f).setResistance(5.0f).setStepSound(Block.SOUND_STONE_FOOTSTEP).setName("Diamond ore").setRarity(1);
+        BLOCK_DIAMOND = new BlockOreBlock(57, 40).setHardness(5.0f).setResistance(10.0f).setStepSound(Block.SOUND_METAL_FOOTSTEP).setName("Diamond block").setRarity(1);
+        WORKBENCH = new BlockWorkbench(58).setHardness(2.5f).setStepSound(Block.SOUND_WOOD_FOOTSTEP).setName("Crafting table");
+        CROPS = new BlockCrops(59, 88).setHardness(0.0f).setStepSound(Block.SOUND_GRASS_FOOTSTEP).setName("Crops");
+        TILLED_FIELD = new BlockFarmland(60).setHardness(0.6f).setStepSound(Block.SOUND_GRAVEL_FOOTSTEP).setName("Farmland");
+        STONE_OVEN_IDLE = new BlockFurnace(61, false).setHardness(3.5f).setStepSound(Block.SOUND_STONE_FOOTSTEP).setName("Furnace");
+        STONE_OVEN_ACTIVE = new BlockFurnace(62, true).setHardness(3.5f).setStepSound(Block.SOUND_STONE_FOOTSTEP).setLightValue(7, 7, 0).setName("Lit furnace");
+        SIGN_STANDING = new BlockSign(63, TileEntitySign.class, true).setHardness(1.0f).setStepSound(Block.SOUND_WOOD_FOOTSTEP).setName("Sign");
+        DOOR_WOOD = new BlockDoor(64, Material.WOOD).setHardness(3.0f).setStepSound(Block.SOUND_WOOD_FOOTSTEP).setName("Wooden door");
+        LADDER = new BlockLadder(65, 83).setHardness(0.4f).setStepSound(Block.SOUND_WOOD_FOOTSTEP).setName("Ladder");
+        MINECART_TRACK = new BlockMinecartTrack(66, 128).setHardness(0.7f).setStepSound(Block.SOUND_METAL_FOOTSTEP).setName("Rails");
+        STAIR_COMPACT_STONE = new BlockStairs(67, Block.COBBLESTONE).setName("Stone stairs");
+        SIGN_WALL = new BlockSign(68, TileEntitySign.class, false).setHardness(1.0f).setStepSound(Block.SOUND_WOOD_FOOTSTEP).setName("Sign");
+        LEVER = new BlockLever(69, 96).setHardness(0.5f).setStepSound(Block.SOUND_WOOD_FOOTSTEP).setName("Lever");
+        PRESSURE_PLATE_STONE = new BlockPressurePlate(70, Block.STONE.blockIndexInTexture, EnumMobType.MOBS).setHardness(0.5f).setStepSound(Block.SOUND_STONE_FOOTSTEP).setName("Stone pressure plate");
+        DOOR_IRON = new BlockDoor(71, Material.IRON).setHardness(5.0f).setStepSound(Block.SOUND_METAL_FOOTSTEP).setName("Hub door");
+        PRESSURE_PLATE_WOOD = new BlockPressurePlate(72, Block.PLANKS.blockIndexInTexture, EnumMobType.EVERYTHING).setHardness(0.5f).setStepSound(Block.SOUND_WOOD_FOOTSTEP).setName("Wooden pressure plate");
+        ORE_REDSTONE = new BlockRedstoneOre(73, 51, false).setHardness(3.0f).setResistance(5.0f).setStepSound(Block.SOUND_STONE_FOOTSTEP).setName("Greenstone ore");
+        ORE_REDSTONE_GLOWING = new BlockRedstoneOre(74, 51, true).setLightValue(0, 0, 5).setHardness(3.0f).setResistance(5.0f).setStepSound(Block.SOUND_STONE_FOOTSTEP).setName("Greenstone ore");
+        TORCH_REDSTONE_IDLE = new BlockRedstoneTorch(75, 115, false).setHardness(0.0f).setStepSound(Block.SOUND_WOOD_FOOTSTEP).setName("Greenstone torch");
+        TORCH_REDSTONE_ACTIVE = new BlockRedstoneTorch(76, 99, true).setHardness(0.0f).setLightValue(0, 1, 4).setStepSound(Block.SOUND_WOOD_FOOTSTEP).setName("Greenstone torch");
+        BUTTON = new BlockButton(77, Block.STONE.blockIndexInTexture).setHardness(0.5f).setStepSound(Block.SOUND_STONE_FOOTSTEP).setName("Stone button");
+        SNOW = new BlockSnow(78, 66).setHardness(0.1f).setStepSound(Block.SOUND_CLOTH_FOOTSTEP).setName("Snow layer");
+        ICE = new BlockIce(79, 67).setHardness(0.5f).setLightOpacity(3, 3, 3).setStepSound(Block.SOUND_GLASS_FOOTSTEP).setName("Ice");
+        BLOCK_SNOW = new BlockSnowBlock(80, 66).setHardness(0.2f).setStepSound(Block.SOUND_CLOTH_FOOTSTEP).setName("Snow block");
+        CACTUS = new BlockCactus(81, 70).setHardness(0.4f).setStepSound(Block.SOUND_CLOTH_FOOTSTEP).setName("Cactus");
+        BLOCK_CLAY = new BlockClay(82, 72).setHardness(0.6f).setStepSound(Block.SOUND_GRAVEL_FOOTSTEP).setName("Dream block");
+        REED = new BlockReed(83, 73).setHardness(0.0f).setStepSound(Block.SOUND_GRASS_FOOTSTEP).setName("Reeds");
+        JUKEBOX = new BlockJukebox(84, 74).setHardness(2.0f).setResistance(10.0f).setStepSound(Block.SOUND_STONE_FOOTSTEP).setName("Cassete player");
+        FENCE = new BlockFence(85, 4).setHardness(2.0f).setResistance(5.0f).setStepSound(Block.SOUND_WOOD_FOOTSTEP).setName("Oak fence");
+        QUAD_WINDOW_GLASS_BLOCK = new BlockGlass(90, 145, Material.GLASS, false).setHardness(0.3f).setStepSound(Block.SOUND_GLASS_FOOTSTEP).setName("Window");
+        PILLAR_BLOCK = new Block(91, 144, Material.WOOD).setHardness(2.0f).setResistance(5.0f).setStepSound(Block.SOUND_WOOD_FOOTSTEP).setName("Pillar block");
+        TILE_BLOCK = new Block(92, 146, Material.ROCK).setHardness(2.0f).setResistance(10.0f).setStepSound(Block.SOUND_STONE_FOOTSTEP).setName("Tile");
+        TILE_BLOCK_2 = new Block(93, 147, Material.ROCK).setHardness(2.0f).setResistance(10.0f).setStepSound(Block.SOUND_STONE_FOOTSTEP).setName("Tile 2");
+        TILE_BLOCK_2_NON_FUCKED = new BlockGlass(94, 147, Material.GLASS, false).setHardness(0.3f).setStepSound(Block.SOUND_GLASS_FOOTSTEP).setName("Tile 2 not fucked");
+        DIMENSION_FLOOR_BLOCK = new Block(95, 148, Material.ROCK).setHardness(2.0f).setResistance(10.0f).setStepSound(Block.SOUND_STONE_FOOTSTEP).setName("Dimension floor block");
+        DIMENSION_WALL_BLOCK = new Block(96, 149, Material.ROCK).setHardness(2.0f).setResistance(10.0f).setStepSound(Block.SOUND_STONE_FOOTSTEP).setName("Dimension wall block");
+        DBG_BLOCK = new Block(97, 150, Material.ROCK).setHardness(2.0f).setResistance(10.0f).setStepSound(Block.SOUND_STONE_FOOTSTEP).setName("Debug log").setRarity(3);
+        TILE_BLOCK_3 = new Block(98, 151, Material.ROCK).setHardness(2.0f).setResistance(10.0f).setStepSound(Block.SOUND_STONE_FOOTSTEP).setName("Tile 3");
+        TILE_BLOCK_4 = new Block(99, 152, Material.ROCK).setHardness(2.0f).setResistance(10.0f).setStepSound(Block.SOUND_STONE_FOOTSTEP).setName("Tile 4");
+        FAKE_GRASS = new BlockMultiSided(100, 153, 154, 155).setHardness(0.6f).setStepSound(Block.SOUND_GRASS_FOOTSTEP).setName("Grass block?");
+        ALT_MOJANG_HYPOSTASIS_ANEMO = new Block(101, 156, Material.ROCK).setHardness(2.0f).setResistance(10.0f).setStepSound(Block.SOUND_STONE_FOOTSTEP).setName("Mojang hypostasis");
+        IMGUR_9F0A3UN = new Block(102, 157, Material.ROCK).setHardness(2.0f).setResistance(10.0f).setStepSound(Block.SOUND_STONE_FOOTSTEP).setName("https://imgir.com/9FA3un");
+        YEAH_WE_HAD_FUN_WITH_THIS_AS_YOU_CAN_SEE = new Block(103, 158, Material.ROCK).setHardness(2.0f).setResistance(10.0f).setStepSound(Block.SOUND_STONE_FOOTSTEP).setName("Yeah we had fun with this as you can see");
+        BARRIER_BLOCK = new BlockHidable(104, 159, Material.GLASS, false).setHardness(0.3f).setStepSound(Block.SOUND_GLASS_FOOTSTEP).setName("Barrier block").setRarity(3);
+        STAIR_LADDER_BLOCK = new BlockLadder(105, 161).setHardness(0.4f).setStepSound(Block.SOUND_WOOD_FOOTSTEP).setName("Ladder?");
+        FAKE_DIRT = new Block(106, 162, Material.ROCK).setHardness(0.6f).setResistance(10.0f).setStepSound(Block.SOUND_GRASS_FOOTSTEP).setName("Dirt?");
+        FAKE_ROCK = new Block(107, 163, Material.ROCK).setHardness(2.0f).setResistance(10.0f).setStepSound(Block.SOUND_STONE_FOOTSTEP).setName("Stone?");
+        FAKE_SAND = new BlockSand(108, 164).setHardness(0.5f).setStepSound(Block.SOUND_SAND_FOOTSTEP).setName("Sand?");
+        WOOL_PINK = new Block(109, 165, Material.CLOTH).setHardness(0.8f).setStepSound(Block.SOUND_CLOTH_FOOTSTEP).setName("Pink wool");
+        WOOL_BLUE = new Block(110, 166, Material.CLOTH).setHardness(0.8f).setStepSound(Block.SOUND_CLOTH_FOOTSTEP).setName("Blue wool");
+        WOOL_GREEN = new Block(111, 167, Material.CLOTH).setHardness(0.8f).setStepSound(Block.SOUND_CLOTH_FOOTSTEP).setName("Green wool");
+        WOOL_BLACK = new Block(112, 168, Material.CLOTH).setHardness(0.8f).setStepSound(Block.SOUND_CLOTH_FOOTSTEP).setName("Black wool");
+        DBG_2_BLOCK = new BlockGlowing(113, 150, 1).setHardness(0.0f).setLightValue(15, 15, 15).setStepSound(Block.SOUND_STONE_FOOTSTEP).setName("Debug foliage").setRarity(3);
+        SALT_BLOCK = new BlockMultiSided(114, 170, 169, 170).setHardness(0.6f).setStepSound(Block.SOUND_STONE_FOOTSTEP).setName("Salt");
+        GLOWING_FLOWER = new BlockGlowingFlower(115, 171, 1).setHardness(0.0f).setLightValue(3, 12, 12).setStepSound(Block.SOUND_GRASS_FOOTSTEP).setName("Glowing flower");
+        BLUE_FIRE_IDK = new BlockGlowing(116, 172, 2).setHardness(0.0f).setLightValue(0, 0, 15).setStepSound(Block.SOUND_STONE_FOOTSTEP).setName("Blue fire");
+        GLOWING_FLOWER_INF_BASIC = new BlockGlowingFlowerInfused(117, 173, 1, 2).setHardness(0.0f).setLightValue(0, 14, 14).setStepSound(Block.SOUND_GRASS_FOOTSTEP).setName("Basic glowing flower");
+        GLOWING_FLOWER_INF_GOLD = new BlockGlowingFlowerInfused(118, 174, 1, 4).setHardness(0.0f).setLightValue(15, 15, 0).setStepSound(Block.SOUND_GRASS_FOOTSTEP).setName("Golden glowing flower");
+        GLOWING_FLOWER_INF_OBSIDIAN = new BlockGlowingFlowerInfused(119, 175, 1, 7).setHardness(0.0f).setLightValue(15, 0, 15).setStepSound(Block.SOUND_GRASS_FOOTSTEP).setName("Obsidian glowing flower");
+        SAFE = new BlockSafe(120, 177, 176, 177).setHardness(1.5f).setResistance(10.0f).setStepSound(Block.SOUND_STONE_FOOTSTEP).setName("Safe").setRarity(3);
         for (int i = 0; i < 256; ++i) {
             if (Block.BLOCKS_LIST[i] != null) {
-                Item.ITEMS_LIST[i] = new ItemBlock(i - 256);
+                Item.ITEMS_LIST[i] = new ItemBlock(i - 256).setName(Block.BLOCKS_LIST[i].getName()).setRarity(Block.BLOCKS_LIST[i].getRarity());
             }
         }
     }
-    
+
     protected Block(final int id, final Material material) {
         this.stepSound = Block.SOUND_POWDER_FOOTSTEP;
@@ -297,5 +329,5 @@
         this.slipperiness = 0.6f;
         if (Block.BLOCKS_LIST[id] != null) {
-            throw new IllegalArgumentException(new StringBuilder().append("Slot ").append(id).append(" is already occupied by ").append(Block.BLOCKS_LIST[id]).append(" when adding ").append(this).toString());
+            throw new IllegalArgumentException("Slot " + id + " is already occupied by \"" + Block.BLOCKS_LIST[id].getName() + "\" when adding \"" + this.getName() + "\"");
         }
         this.material = material;
@@ -304,46 +336,52 @@
         this.setBlockBounds(0.0f, 0.0f, 0.0f, 1.0f, 1.0f, 1.0f);
         Block.OPAQUE_CUBE_LOOKUP[id] = this.isOpaqueCube();
-        Block.LIGHT_OPACITY[id] = (this.isOpaqueCube() ? 255 : 0);
+        Block.LIGHT_OPACITY_R[id] = (this.isOpaqueCube() ? 255 : 0);
+        Block.LIGHT_OPACITY_G[id] = (this.isOpaqueCube() ? 255 : 0);
+        Block.LIGHT_OPACITY_B[id] = (this.isOpaqueCube() ? 255 : 0);
         Block.CAN_BLOCK_GRASS[id] = this.getCanBlockGrass();
         Block.IS_BLOCK_CONTAINER[id] = false;
     }
-    
+
     protected Block(final int id, final int tex, final Material material) {
         this(id, material);
         this.blockIndexInTexture = tex;
     }
-    
+
     protected Block setStepSound(final StepSound stepSound) {
         this.stepSound = stepSound;
         return this;
     }
-    
-    protected Block setLightOpacity(final int opacity) {
-        Block.LIGHT_OPACITY[this.blockID] = opacity;
+
+    protected Block setLightOpacity(final int r, final int g, final int b) {
+        Block.LIGHT_OPACITY_R[this.blockID] = r;
+        Block.LIGHT_OPACITY_G[this.blockID] = g;
+        Block.LIGHT_OPACITY_B[this.blockID] = b;
         return this;
     }
-    
-    protected Block setLightValue(final float value) {
-        Block.LIGHT_VALUE[this.blockID] = (int)(15.0f * value);
+
+    protected Block setLightValue(final int r, final int g, final int b) {
+        Block.LIGHT_VALUE_R[this.blockID] = r;
+        Block.LIGHT_VALUE_G[this.blockID] = g;
+        Block.LIGHT_VALUE_B[this.blockID] = b;
         return this;
     }
-    
+
     protected Block setResistance(final float resistance) {
         this.resistance = resistance * 3.0f;
         return this;
     }
-    
+
     private boolean getCanBlockGrass() {
         return false;
     }
-    
+
     public boolean renderAsNormalBlock() {
         return true;
     }
-    
+
     public int getRenderType() {
         return 0;
     }
-    
+
     protected Block setHardness(final float hardness) {
         this.hardness = hardness;
@@ -353,9 +391,9 @@
         return this;
     }
-    
+
     protected void setTickOnLoad(final boolean ticksOnLoad) {
         Block.TICK_ON_LOAD[this.blockID] = ticksOnLoad;
     }
-    
+
     public void setBlockBounds(final float minX, final float minY, final float minZ, final float maxX, final float maxY, final float maxZ) {
         this.minX = minX;
@@ -366,29 +404,29 @@
         this.maxZ = maxZ;
     }
-    
-    public float getBlockBrightness(final IBlockAccess blockAccess, final int x, final int y, final int z) {
-        return blockAccess.getBrightness(x, y, z);
+
+    public float getBlockBrightness(final IBlockAccess blockAccess, final int x, final int y, final int z, final EnumColorChannel color) {
+        return blockAccess.getBrightness(x, y, z, color);
     }
-    
+
     public boolean shouldSideBeRendered(final IBlockAccess blockAccess, final int x, final int y, final int z, final int side) {
         return (side == 0 && this.minY > 0.0) || (side == 1 && this.maxY < 1.0) || (side == 2 && this.minZ > 0.0) || (side == 3 && this.maxZ < 1.0) || (side == 4 && this.minX > 0.0) || (side == 5 && this.maxX < 1.0) || !blockAccess.isBlockNormalCube(x, y, z);
     }
-    
+
     public int getBlockTexture(final IBlockAccess blockAccess, final int x, final int y, final int z, final int side) {
         return this.getBlockTextureFromSideAndMetadata(side, blockAccess.getBlockMetadata(x, y, z));
     }
-    
+
     public int getBlockTextureFromSideAndMetadata(final int side, final int metadata) {
         return this.getBlockTextureFromSide(side);
     }
-    
+
     public int getBlockTextureFromSide(final int side) {
         return this.blockIndexInTexture;
     }
-    
+
     public AxisAlignedBB getSelectedBoundingBoxFromPool(final World world, final int x, final int y, final int z) {
         return AxisAlignedBB.getBoundingBoxFromPool(x + this.minX, y + this.minY, z + this.minZ, x + this.maxX, y + this.maxY, z + this.maxZ);
     }
-    
+
     public void getCollidingBoundingBoxes(final World world, final int x, final int y, final int z, final AxisAlignedBB aabb, final ArrayList<AxisAlignedBB> collidingBoundingBoxes) {
         final AxisAlignedBB collisionBoundingBoxFromPool = this.getCollisionBoundingBoxFromPool(world, x, y, z);
@@ -397,51 +435,51 @@
         }
     }
-    
+
     public AxisAlignedBB getCollisionBoundingBoxFromPool(final World world, final int x, final int y, final int z) {
         return AxisAlignedBB.getBoundingBoxFromPool(x + this.minX, y + this.minY, z + this.minZ, x + this.maxX, y + this.maxY, z + this.maxZ);
     }
-    
+
     public boolean isOpaqueCube() {
         return true;
     }
-    
+
     public boolean canCollideCheck(final int metadata, final boolean boolean2) {
         return this.isCollidable();
     }
-    
+
     public boolean isCollidable() {
         return true;
     }
-    
+
     public void updateTick(final World world, final int x, final int y, final int z, final Random rand) {
     }
-    
+
     public void randomDisplayTick(final World world, final int x, final int y, final int z, final Random rand) {
     }
-    
+
     public void onBlockDestroyedByPlayer(final World world, final int x, final int y, final int z, final int metadata) {
     }
-    
+
     public void onNeighborBlockChange(final World world, final int x, final int y, final int z, final int id) {
     }
-    
+
     public int tickRate() {
         return 10;
     }
-    
+
     public void onBlockAdded(final World world, final int x, final int y, final int z) {
     }
-    
+
     public void onBlockRemoval(final World world, final int x, final int y, final int z) {
     }
-    
+
     public int quantityDropped(final Random rand) {
         return 1;
     }
-    
+
     public int idDropped(final int metadata, final Random rand) {
         return this.blockID;
     }
-    
+
     public float blockStrength(final EntityPlayer entityPlayer) {
         if (this.hardness < 0.0f) {
@@ -452,5 +490,5 @@
         }
         else {
-            if (!entityPlayer.canHarvestBlock(this)) {
+            if (!entityPlayer.canHarvestBlock(this, entityPlayer.worldObj)) {
                 return 1.0f / this.hardness / 100.0f;
             }
@@ -458,9 +496,9 @@
         }
     }
-    
+
     public void dropBlockAsItem(final World world, final int x, final int y, final int z, final int metadata) {
         this.dropBlockAsItemWithChance(world, x, y, z, metadata, 1.0f);
     }
-    
+
     public void dropBlockAsItemWithChance(final World world, final int x, final int y, final int z, final int metadata, final float chance) {
         if (world.multiplayerWorld) {
@@ -478,9 +516,9 @@
         }
     }
-    
+
     public float getExplosionResistance(final Entity entity) {
         return this.resistance / 5.0f;
     }
-    
+
     public MovingObjectPosition collisionRayTrace(final World world, final int x, final int y, final int z, Vec3D vec1, Vec3D vec2) {
         this.setBlockBoundsBasedOnState(world, x, y, z);
@@ -512,5 +550,5 @@
         }
         Vec3D vec3D = null;
-        if (intermediateWithXValue != null && (vec3D == null || vec1.distanceTo(intermediateWithXValue) < vec1.distanceTo(vec3D))) {
+        if (intermediateWithXValue != null) {
             vec3D = intermediateWithXValue;
         }
@@ -554,79 +592,79 @@
         return new MovingObjectPosition(x, y, z, side, vec3D.addVector(x, y, z));
     }
-    
+
     private boolean isVecInsideYZBounds(final Vec3D vector) {
         return vector != null && vector.yCoord >= this.minY && vector.yCoord <= this.maxY && vector.zCoord >= this.minZ && vector.zCoord <= this.maxZ;
     }
-    
+
     private boolean isVecInsideXZBounds(final Vec3D vector) {
         return vector != null && vector.xCoord >= this.minX && vector.xCoord <= this.maxX && vector.zCoord >= this.minZ && vector.zCoord <= this.maxZ;
     }
-    
+
     private boolean isVecInsideXYBounds(final Vec3D vector) {
         return vector != null && vector.xCoord >= this.minX && vector.xCoord <= this.maxX && vector.yCoord >= this.minY && vector.yCoord <= this.maxY;
     }
-    
+
     public void onBlockDestroyedByExplosion(final World world, final int x, final int y, final int z) {
     }
-    
+
     public int getRenderBlockPass() {
         return 0;
     }
-    
+
     public boolean canPlaceBlockAt(final World world, final int x, final int y, final int z) {
         final int blockID = world.getBlockID(x, y, z);
         return blockID == 0 || Block.BLOCKS_LIST[blockID].material.getIsLiquid();
     }
-    
+
     public boolean blockActivated(final World world, final int x, final int y, final int z, final EntityPlayer entityPlayer) {
         return false;
     }
-    
+
     public void onEntityWalking(final World world, final int x, final int y, final int z, final Entity entity) {
     }
-    
+
     public void onBlockPlaced(final World world, final int x, final int y, final int z, final int metadata) {
     }
-    
+
     public void onBlockClicked(final World world, final int x, final int y, final int z, final EntityPlayer entityPlayer) {
     }
-    
+
     public void velocityToAddToEntity(final World world, final int x, final int y, final int z, final Entity entity, final Vec3D velocityVector) {
     }
-    
+
     public void setBlockBoundsBasedOnState(final IBlockAccess blockAccess, final int x, final int y, final int z) {
     }
-    
+
     public int colorMultiplier(final IBlockAccess blockAccess, final int x, final int y, final int z) {
         return 16777215;
     }
-    
+
     public boolean isPoweringTo(final IBlockAccess blockAccess, final int x, final int y, final int z, final int metadata) {
         return false;
     }
-    
+
     public boolean canProvidePower() {
         return false;
     }
-    
+
     public void onEntityCollidedWithBlock(final World world, final int x, final int y, final int z, final Entity entity) {
     }
-    
+
     public boolean isIndirectlyPoweringTo(final World world, final int x, final int y, final int z, final int side) {
         return false;
     }
-    
+
     public void setBlockBoundsForItemRender() {
     }
-    
+
     public void harvestBlock(final World world, final int x, final int y, final int z, final int metadata) {
         this.dropBlockAsItem(world, x, y, z, metadata);
     }
-    
-    public boolean unusedBrokenCanGrowOrSomething(final World world, final int x, final int y, final int z) {
-        final boolean b = x == Block.GRASS.blockID || x == Block.DIRT.blockID || x == Block.TILLED_FIELD.blockID;
-        return (world.getBlockLightValue(x, y, z) >= 8 || world.canBlockSeeTheSky(x, y, z)) && b;
-    }
-    
+
+    //public boolean unusedBrokenCanGrowOrSomething(final World world, final int x, final int y, final int z) {
+    //    final boolean b = x == Block.GRASS.blockID || x == Block.DIRT.blockID || x == Block.TILLED_FIELD.blockID;
+    //    return (world.getBlockLightValue(x, y, z) >= 8 || world.canBlockSeeTheSky(x, y, z)) && b;
+    //}
+
     public boolean canBlockStay(final World world, final int x, final int y, final int z) {
         return true;
