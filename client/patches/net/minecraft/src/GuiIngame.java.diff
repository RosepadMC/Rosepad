--- GuiIngame.java
+++ GuiIngame.java
@@ -3,10 +3,14 @@
 import java.awt.Color;
 import java.util.ArrayList;
+import java.util.List;
+import java.util.Objects;
+import java.util.Random;
+
+import net.buj.rml.Chat;
 import org.lwjgl.opengl.GL11;
+
 import net.minecraft.client.Minecraft;
-import java.util.Random;
-import java.util.List;
 
-public class GuiIngame extends Gui {
+public class GuiIngame extends Gui implements Chat {
     private static RenderItem itemRenderer;
     private List<ChatLine> chatMessageList;
@@ -19,5 +23,4 @@
     public float damageGuiPartialTime;
     float prevVignetteBrightness;
-    public boolean renderQAName;
     public static String uqKey;
     private boolean initedArea;
@@ -28,6 +31,11 @@
     public long areaTimer;
     private static final String[] syllab;
-    private static final String versionName = "Minecraft Alpha 1.0.16.05_13 Lilypad (LPUJ v106)";
-    
+    public boolean showGUI;
+    public boolean showDebugInfo;
+
+    private String getVersionName() {
+        return "Minecraft Alpha 1.0.16.05_13 §2Lilypad QA§f (§cRosepad " + mc.getVersionString() + "§f)";
+    }
+
     static {
         GuiIngame.uqKey = "";
@@ -35,7 +43,7 @@
         GuiIngame.itemRenderer = new RenderItem();
     }
-    
+
     public void RenderHungerBar() {
-        GL11.glColor4f(1.0f, 1.0f, 1.0f, 1.0f);
+        RenderEngine.glColor4f(1.0f, 1.0f, 1.0f, 1.0f);
         GL11.glBindTexture(3553, this.mc.renderEngine.getTexture("/gui/icons.png"));
         this.drawTexturedModalRect(0, 0, 0, 27, 32, 16);
@@ -44,5 +52,5 @@
         this.drawTexturedModalRect(0, 0, n * 32, 43, 32, 16);
     }
-    
+
     public void renderSomethingIdk(final int integer1, final int integer2, final int integer3, final int integer4, final int integer5, final int integer6) {
         final Tessellator instance = Tessellator.instance;
@@ -55,5 +63,5 @@
         instance.draw();
     }
-    
+
     public static String Namegen2(final long long1, final int integer2, final int integer3) {
         final long n = (integer3 + 392214) * 784428L + (integer2 + 392214);
@@ -73,5 +81,5 @@
         return String.valueOf(s) + GuiIngame.syllab[(int)((n * 2L + n2) % 45L)] + GuiIngame.syllab[(int)((n * 3L + n2) % 45L)] + GuiIngame.syllab[(int)((n * 4L + n2) % 45L)];
     }
-    
+
     public void ResetNamegen() {
         this.lgroupX = (int)(this.mc.thePlayer.posX / 32.0);
@@ -83,5 +91,5 @@
         this.areaTimer = System.currentTimeMillis();
     }
-    
+
     public boolean NamegenNeedsReset() {
         final int n = (int)(this.mc.thePlayer.posX / 32.0);
@@ -89,11 +97,10 @@
         return !this.initedArea || this.lastSeed != this.mc.theWorld.randomSeed || n != this.lgroupX || n2 != this.lgroupY;
     }
-    
+
     public GuiIngame(final Minecraft minecraft) {
-        this.renderQAName = true;
         this.initedArea = false;
         this.currentArea = "";
         this.areaTimer = 0L;
-        this.chatMessageList = (List<ChatLine>)new ArrayList();
+        this.chatMessageList = new ArrayList<>();
         this.rand = new Random();
         this.testMessage = null;
@@ -103,7 +110,9 @@
         this.prevVignetteBrightness = 1.0f;
         this.mc = minecraft;
+        this.showGUI = true;
     }
-    
+
     public void renderGameOverlay(final float renderPartialTick, final boolean hasScreen, final int width, final int height) {
+        if (!this.showGUI && this.mc.currentScreen == null) return;
         final ScaledResolution scaledResolution = new ScaledResolution(this.mc.displayWidth, this.mc.displayHeight);
         final int scaledWidth = scaledResolution.getScaledWidth();
@@ -115,5 +124,5 @@
             this.renderVignette(this.mc.thePlayer.getBrightness(renderPartialTick), scaledWidth, scaledHeight);
         }
-        GL11.glColor4f(1.0f, 1.0f, 1.0f, 1.0f);
+        RenderEngine.glColor4f(1.0f, 1.0f, 1.0f, 1.0f);
         GL11.glBindTexture(3553, this.mc.renderEngine.getTexture("/gui/gui.png"));
         final InventoryPlayer inventory = this.mc.thePlayer.inventory;
@@ -132,5 +141,5 @@
         final int health = this.mc.thePlayer.health;
         final int prevHealth = this.mc.thePlayer.prevHealth;
-        this.rand.setSeed((long)(this.updateCounter * 312871));
+        this.rand.setSeed((long)(this.updateCounter * 312871L));
         if (this.mc.playerController.shouldDrawHUD()) {
             final int i = this.mc.thePlayer.getPlayerArmorValue();
@@ -140,5 +149,4 @@
                 final ItemStack armorItemInSlot = this.mc.thePlayer.inventory.armorItemInSlot(j);
                 if (armorItemInSlot != null && armorItemInSlot.getItem() instanceof ItemArmor) {
-                    armorItemInSlot.getItem();
                     final int maxDamage = armorItemInSlot.getMaxDamage();
                     final int n3 = maxDamage - armorItemInSlot.itemDmg;
@@ -241,41 +249,75 @@
         GLStatics.disableStandardItemLighting();
         GL11.glDisable(32826);
-        if (this.mc.gameSettings.showFPS) {
-            fontRenderer.drawStringWithShadow("Minecraft Alpha 1.0.16.05_13 Lilypad (LPUJ v106)", 2, 2, 16777215);
-            fontRenderer.drawStringWithShadow(this.mc.debug, 2, 12, 16777215);
-            fontRenderer.drawStringWithShadow(this.mc.debugInfoRenders(), 2, 22, 16777215);
-            fontRenderer.drawStringWithShadow(this.mc.getEntityDebug(), 2, 32, 16777215);
-            fontRenderer.drawStringWithShadow(this.mc.debugLoadedEntities(), 2, 42, 16777215);
-            if (this.mc.theWorld != null) {
-                fontRenderer.drawStringWithShadow(Long.toString(this.mc.theWorld.randomSeed), 2, 52, 16777215);
+        if (showDebugInfo) {
+            List<String> lines = new ArrayList<>();
+            lines.add(this.getVersionName());
+            if (this.mc.theWorld != null && this.mc.theWorld.multiplayerWorld) {
+                if (this.mc.theWorld.rosepadContentEnabled()) {
+                    String brandName = NetClientHandler.rosepadMeta.getBrandName();
+                    String color = "§7";
+                    if (brandName.equals("Rosepad")) {
+                        color = "§c";
+                    }
+                    if (brandName.equals("LilyBukkit")) {
+                        color = "§2"; // Subject to change
+                    }
+                    lines.add(
+                            "\"" + color + brandName + "§f\" server (Version " +
+                                    NetClientHandler.rosepadMeta.getVersionString() + "§f)"
+                    );
+                }
+                else
+                    lines.add("Vanilla server");
+                lines.add("Network: §6" + ThreadBandwidthCounter.getWBPS() + "§f/§b" + ThreadBandwidthCounter.getRBPS());
             }
-            if (GuiIngame.uqKey != "") {
-                fontRenderer.drawStringWithShadow(GuiIngame.uqKey, 2, 52, 16777215);
+            lines.add(this.mc.debug);
+            lines.add(this.mc.debugInfoRenders());
+            lines.add(this.mc.getEntityDebug());
+            lines.add(this.mc.debugLoadedEntities());
+            if (this.mc.thePlayer != null) {
+                String string = "X: §c" + Math.round(this.mc.thePlayer.posX * 100) / 100.0;
+                string += "§f, Y: §a" + Math.round(this.mc.thePlayer.boundingBox.minY * 100) / 100.0;
+                string += "§f, Z: §b" + Math.round(this.mc.thePlayer.posZ * 100) / 100.0;
+                lines.add(string);
             }
+            if (this.mc.theWorld != null && !this.mc.theWorld.multiplayerWorld) {
+                lines.add(Long.toString(this.mc.theWorld.randomSeed));
+            }
+            if (!Objects.equals(GuiIngame.uqKey, "")) {
+                lines.add(GuiIngame.uqKey);
+            }
+
+            int i = 0;
+            for (String str : lines) {
+                fontRenderer.drawStringWithShadow(str, 2, 2 + (i++) * 10, 16777215);
+            }
+
             final long maxMemory = Runtime.getRuntime().maxMemory();
             final long totalMemory = Runtime.getRuntime().totalMemory();
             final long n6 = totalMemory - Runtime.getRuntime().freeMemory();
-            final String string = new StringBuilder().append("Used memory: ").append(n6 * 100L / maxMemory).append("% (").append(n6 / 1024L / 1024L).append("MB) of ").append(maxMemory / 1024L / 1024L).append("MB").toString();
+            final String string = "Used memory: " + n6 * 100L / maxMemory + "% (" + n6 / 1024L / 1024L + "MB) of " + maxMemory / 1024L / 1024L + "MB";
             this.drawString(fontRenderer, string, scaledWidth - fontRenderer.getStringWidth(string) - 2, 2, 14737632);
-            final String string2 = new StringBuilder().append("Allocated memory: ").append(totalMemory * 100L / maxMemory).append("% (").append(totalMemory / 1024L / 1024L).append("MB)").toString();
+            final String string2 = "Allocated memory: " + totalMemory * 100L / maxMemory + "% (" + totalMemory / 1024L / 1024L + "MB)";
             this.drawString(fontRenderer, string2, scaledWidth - fontRenderer.getStringWidth(string2) - 2, 12, 14737632);
         }
         else {
-            fontRenderer.drawStringWithShadow("Minecraft Alpha 1.0.16.05_13 Lilypad (LPUJ v106)", 2, 2, 16777215);
-            if (GuiIngame.uqKey != "") {
+            fontRenderer.drawStringWithShadow(this.getVersionName(), 2, 2, 16777215);
+            if (!Objects.equals(GuiIngame.uqKey, "")) {
                 fontRenderer.drawStringWithShadow(GuiIngame.uqKey, 2, 12, 16777215);
             }
         }
-        GL11.glPushMatrix();
-        if (this.NamegenNeedsReset()) {
-            this.ResetNamegen();
+        if (mc.gameSettings.renderChunkName) {
+            GL11.glPushMatrix();
+            if (this.NamegenNeedsReset()) {
+                this.ResetNamegen();
+            }
+            final float n7 = (float) (Math.pow(0.5f, (float) this.currentArea.length() / 10.0f));
+            GL11.glScalef(1.0f + n7, 1.0f + n7, 1.0f + n7);
+            final int n = (int) (255.0f * Math.max(1.0f - Math.min(System.currentTimeMillis() - this.areaTimer, 5000L) / 5000.0f, 0.3f));
+            if (n != 0) {
+                fontRenderer.drawStringWithShadow(this.currentArea, scaledWidth / 2 - 80, 20, 16777215 + n * 16777216);
+            }
+            GL11.glPopMatrix();
         }
-        final float n7 = (float)(1.0 * Math.pow(0.5, (double)(this.currentArea.length() / 10)));
-        GL11.glScalef(1.0f + n7, 1.0f + n7, 1.0f + n7);
-        final int n = (int)(255.0f * Math.max(1.0f - Math.min(System.currentTimeMillis() - this.areaTimer, 5000L) / 5000.0f, 0.3f));
-        if (n != 0) {
-            fontRenderer.drawStringWithShadow(this.currentArea, scaledWidth / 2 - 80, 20, 16777215 + n * 16777216);
-        }
-        GL11.glPopMatrix();
         GL11.glBindTexture(3553, this.mc.renderEngine.getTexture("/gui/icons.png"));
         if (this.recordPlayingUpFor > 0) {
@@ -306,10 +348,12 @@
         GL11.glPushMatrix();
         GL11.glTranslatef(0.0f, (float)(scaledHeight - 48), 0.0f);
-        if (GuiScreen.currentID != "") {
+        if (!Objects.equals(GuiScreen.currentID, "")) {
             fontRenderer.drawStringWithShadow("[Use numpad to enter, - to clear, + to give]", 2, 10, 16449390);
-            fontRenderer.drawStringWithShadow(new StringBuilder("Give item: ").append(GuiScreen.currentID).toString(), 2, 20, 16449390);
+            fontRenderer.drawStringWithShadow("Give item: " + GuiScreen.currentID, 2, 20, 16449390);
             try {
                 final int int1 = Integer.parseInt(GuiScreen.currentID);
-                if ((Block.BLOCKS_LIST.length <= int1 || Block.BLOCKS_LIST[int1] == null) && (Item.ITEMS_LIST.length <= int1 || Item.ITEMS_LIST[int1] == null)) {
+                if ((Block.BLOCKS_LIST.length <= int1 || Block.BLOCKS_LIST[int1] == null) &&
+                        (Item.ITEMS_LIST.length <= int1 || Item.ITEMS_LIST[int1] == null ||
+                                !Item.ITEMS_LIST[int1].getVanilla() && NetClientHandler.rosepadMeta == null)) {
                     fontRenderer.drawStringWithShadow("(INVALID)", 2, 30, 16711680);
                 }
@@ -341,7 +385,7 @@
             }
         }
-        if (this.renderQAName) {
+        if (this.mc.gameSettings.renderQAName) {
             GL11.glScalef(2.0f, 2.0f, 2.0f);
-            fontRenderer.drawStringWithShadow(new StringBuilder("QA BUILD: ").append(GuiScreenInputPass.name).toString(), 5, 0, 553320302);
+            fontRenderer.drawStringWithShadow("QA BUILD: " + GuiScreenInputPass.name, 5, 0, 553320302);
         }
         GL11.glPopMatrix();
@@ -356,5 +400,5 @@
         GL11.glDisable(3042);
     }
-    
+
     private void renderVignette(float brightness, final int width, final int height) {
         brightness = 1.0f - brightness;
@@ -369,5 +413,5 @@
         GL11.glDepthMask(false);
         GL11.glBlendFunc(0, 769);
-        GL11.glColor4f(this.prevVignetteBrightness, this.prevVignetteBrightness, this.prevVignetteBrightness, 1.0f);
+        RenderEngine.glColor4f(this.prevVignetteBrightness, this.prevVignetteBrightness, this.prevVignetteBrightness, 1.0f);
         GL11.glBindTexture(3553, this.mc.renderEngine.getTexture("/misc/vignette.png"));
         final Tessellator instance = Tessellator.instance;
@@ -380,8 +424,8 @@
         GL11.glDepthMask(true);
         GL11.glEnable(2929);
-        GL11.glColor4f(1.0f, 1.0f, 1.0f, 1.0f);
+        RenderEngine.glColor4f(1.0f, 1.0f, 1.0f, 1.0f);
         GL11.glBlendFunc(770, 771);
     }
-    
+
     private void renderInventorySlot(final int slot, final int x, final int y, final float renderPartialTick) {
         final ItemStack itemStack = this.mc.thePlayer.inventory.mainInventory[slot];
@@ -403,5 +447,5 @@
         GuiIngame.itemRenderer.renderItemOverlayIntoGUI(this.mc.fontRenderer, this.mc.renderEngine, itemStack, x, y);
     }
-    
+
     public void updateTick() {
         if (this.recordPlayingUpFor > 0) {
@@ -410,11 +454,11 @@
         ++this.updateCounter;
         for (int i = 0; i < this.chatMessageList.size(); ++i) {
-            final ChatLine chatLine2;
-            final ChatLine chatLine = chatLine2 = (ChatLine)this.chatMessageList.get(i);
+            final ChatLine chatLine2 = this.chatMessageList.get(i);
             ++chatLine2.updateCounter;
         }
     }
-    
+
     public void addChatMessage(String message) {
+        if (message.length() > 2000) message = message.substring(message.length() - 2000).trim();
         while (this.mc.fontRenderer.getStringWidth(message) > 320) {
             int n;
@@ -424,12 +468,24 @@
         }
         this.chatMessageList.add(0, new ChatLine(message));
-        while (this.chatMessageList.size() > 50) {
+        while (this.chatMessageList.size() > 512) {
             this.chatMessageList.remove(this.chatMessageList.size() - 1);
         }
     }
-    
+
     public void setRecordPlayingMessage(final String record) {
-        this.recordPlaying = new StringBuilder("Now playing: ").append(record).toString();
+        this.recordPlaying = "Now playing: " + record;
         this.recordPlayingUpFor = 60;
     }
+
+    public void clear() {
+        chatMessageList.clear();
+    }
+
+    public void append(String text) {
+        addChatMessage(text);
+    }
+
+    public void append(String username, String text) {
+        // do nothing
+    }
 }
